import * as React from 'react';
export declare function hoistStatics(target: any, source: any): void;
export declare function createHOC<Injected>(callback: (component: React.ComponentType<Injected>, props: {}) => React.ComponentType<{}>): <Props extends Injected>(component: React.ComponentType<Injected>) => React.FunctionComponent<Pick<Props, Exclude<keyof Props, keyof Injected>>>;
export declare function createStaticHOC<Injected>(callback: (component: any, props: any, ref: any) => any): <Props extends Injected, State, ComponentType extends React.ComponentClass<Props, State>>(component: ComponentType & React.ComponentClass<Props, any>) => ComponentType & (new (props: Pick<Props, Exclude<keyof Props, keyof Injected>>, context?: any) => React.Component<Pick<Props, Exclude<keyof Props, keyof Injected>>, State, any>);
export declare function createRefHOC<Injected>(callback: (component: any, props: any, ref: any) => any): <Props extends Injected, State, ComponentType extends React.ComponentClass<Props, State>>(component: ComponentType & React.ComponentClass<Props, any>) => React.ForwardRefExoticComponent<React.PropsWithoutRef<Props> & React.RefAttributes<ComponentType>>;
